/**
 * This code was generated by Builder.io.
 */
import React, { useEffect } from "react";
import { useState } from "react";
import styles from "../CategoryGrid/CategoryGrid.module.css";
import CategoryItem from "../CategoryGrid/CategoryItem";

const categories = [
  { id: 1, name: "Category 1" },
  { id: 2, name: "Category 2" },
  { id: 3, name: "Category 3" },
  { id: 4, name: "Category 4" },
  { id: 5, name: "Category 5" },
  { id: 6, name: "Category 6" },
];

const categories1 = [
  [ 
    { id: 1, name: "Stores 1" },
    { id: 2, name: "Stores 2" },
    { id: 3, name: "Stores 3" },
  ],
  [
    { id: 4, name: "Stores 4" },
    { id: 5, name: "Stores 5" },
    { id: 6, name: "Stores 6" },
  ],
  [
    { id: 4, name: "Stores 4" },
    { id: 5, name: "Stores 5" },
  ]
]
function StoresGrid() {
  const [stores, setStores] = useState([]);

  const fetchData = async () => {
    const fetchResult = await fetch("/api/stores/get_stores");
    var cleanResult = []
    if (fetchResult.ok) {
      
      const jsonResult = await fetchResult.json()
      console.log(jsonResult)

      cleanResult = gridify(jsonResult)
      setStores(cleanResult)

    }
  }
  
  useEffect(() => {
    fetchData();
  }, []);
  
  return (
    <main className={styles.container}>
      <section className={styles.content}>
        <div className={styles.gridContainer}>

          {stores.map((row) => (

            <div className={styles.grid}>
              {row.map((category) => (
                <CategoryItem key={category._id} 
                              link = {`/stores/${category._id}`}
                              name={category.title}  
                              imgLink={category.logo}  
                              isStore={false}/>
              ))}
            </div>
          
          ))}

        </div>
      </section>
    </main>
  );
}
const gridify = (data) => {
  const grid = []
  let row = []

  data.forEach((category, index) => {
    row.push(category)
    if ((index + 1) % 3 === 0) {
      grid.push(row)
      row = []
    }
  })

  if (row.length > 0) {
    grid.push(row)
  }

  return grid
}
export default StoresGrid;
